from {{ClassLocation}} import {{subClassOf}}


class {{class_name}}({{subClassOf}}):
	'''
	{{{class_comment}}}

	{{#attributes}}:{{label}}: {{{comment}}} Default: {{#setDefault}}{{dataType}}{{/setDefault}}
	{{/attributes}}
	'''

	possibleProfileList = {'class': [{{#class_origin}}'{{origin}}', {{/class_origin}}],
						{{#attributes}}'{{label}}': [{{#attr_origin}}'{{origin}}', {{/attr_origin}}],
						{{/attributes}} }

	{{#super_init}}__doc__ += '\n Documentation of parent class {{subClassOf}}: \n' + {{subClassOf}}.__doc__ {{/super_init}}

	def __init__(self, {{#attributes}}{{label}} = {{#setDefault}}{{dataType}}{{/setDefault}}, {{/attributes}} {{#super_init}}*args, **kw_args{{/super_init}}):
	{{#super_init}}
	super().__init__(*args, **kw_args)
	{{/super_init}}

	{{#attributes}}
	self.{{label}} = {{label}}
	{{/attributes}}
	{{^attributes}}
pass
	{{/attributes}}

	def __str__(self):
		str = 'class={{class_name}}\n'
		attributes = self.__dict__
		for key in attributes.keys():
			str = str + key + '={}\n'.format(attributes[key])
		return str
