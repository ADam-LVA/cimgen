from {{ClassLocation}} import {{subClassOf}}


class {{class_name}}({{subClassOf}}):
	'''
	{{{class_comment}}}

	{{#attribute}}:{{label}}: {{{comment}}} Default: {{#setDefault}}{{dataType}}{{/setDefault}}
	{{/attribute}}
	'''

	{{#reference}}reference_dict = { {{/reference}}{{#reference_list}}'{{origin_name}}': [{{#foreign_attributes}}'{{attr_name}}',{{/foreign_attributes}} ],
					{{/reference_list}}{{#reference}} } {{/reference}}

	{{#super_init}}__doc__ += '\n Documentation of parent class {{subClassOf}}: \n' + {{subClassOf}}.__doc__ {{/super_init}}

	def __init__(self, {{#attribute}}{{label}} = {{#setDefault}}{{dataType}}{{/setDefault}}, {{/attribute}} {{#super_init}}*args, **kw_args{{/super_init}}):
	{{#super_init}}
	super().__init__(*args, **kw_args)
	{{/super_init}}

	{{#attribute}}
	self.{{label}} = {{label}}
	{{/attribute}}
	{{^attribute}}
pass
	{{/attribute}}

	def __str__(self):
		str = 'class={{class_name}}\n'
		attributes = self.__dict__
		for key in attributes.keys():
			str = str + key + '={}\n'.format(attributes[key])
		return str
