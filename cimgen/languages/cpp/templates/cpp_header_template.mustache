#ifndef {{class_name}}_H
#define {{class_name}}_H
/*
Generated from the CGMES files via cimgen: https://github.com/sogno-platform/cimgen
*/

#include <list>
#include <string>
#include <unordered_map>

#include "{{sub_class_of}}.hpp"
#include "BaseClassDefiner.hpp"
{{#langPack._create_attribute_includes}}{{attributes}}{{/langPack._create_attribute_includes}}
namespace CIMPP
{
{{#langPack._create_attribute_class_declarations}}{{attributes}}{{/langPack._create_attribute_class_declarations}}
{{#class_comment}}
	/*
	{{{class_comment}}}
	*/
{{/class_comment}}
	class {{class_name}} : public {{sub_class_of}}
	{
	public:
		/* constructor initialising all attributes to null */
		{{class_name}}();
		~{{class_name}}() override;

{{#attributes}}
		{{> attribute}} {{> label}};  /* {{comment}} Default: {{#langPack._set_default}}{{dataType}}{{/langPack._set_default}} */
{{/attributes}}

		static const char debugName[];
		const char* debugString() const override;

		static void addConstructToMap(std::unordered_map<std::string, BaseClass* (*)()>& factory_map);
		static void addPrimitiveAssignFnsToMap(std::unordered_map<std::string, assign_function>& assign_map);
		static void addClassAssignFnsToMap(std::unordered_map<std::string, class_assign_function>& assign_map);
		static const BaseClassDefiner declare();
	};

	BaseClass* {{class_name}}_factory();
}
#endif
