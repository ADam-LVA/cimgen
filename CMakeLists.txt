cmake_minimum_required(VERSION 3.10)

if(NOT CGMES_OUTPUT_FOLDER)
	set(CGMES_OUTPUT_FOLDER "${CMAKE_CURRENT_SOURCE_DIR}/CGMES_2.4.15_27JAN2020" CACHE STRING "Define CGMES c++ file output folder")
endif()
if(NOT USE_CIM_VERSION)
	set(USE_CIM_VERSION "CGMES_2.4.15_27JAN2020")
endif()
message(STATUS ${CGMES_OUTPUT_FOLDER})
message(STATUS ${USE_CIM_VERSION})
set(SCHEMA_FOLDER "${CMAKE_CURRENT_SOURCE_DIR}/cgmes_schema/${USE_CIM_VERSION}")
file(GLOB STATIC_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/../static/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/../static/*.hpp ${CMAKE_CURRENT_SOURCE_DIR}/../static/*.h)
foreach(static_file ${STATIC_SRCS})
	file(COPY ${static_file} DESTINATION ${CGMES_OUTPUT_FOLDER})
endforeach()
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/../static/IEC61970/IEC61970CIMVersion.h DESTINATION ${CGMES_OUTPUT_FOLDER}/IEC61970)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/../static/IEC61970/IEC61970CIMVersion.cpp DESTINATION ${CGMES_OUTPUT_FOLDER}/IEC61970)
find_package (Python COMPONENTS Interpreter)
execute_process(COMMAND ${Python_EXECUTABLE} -m pip install xmltodict chevron)
execute_process(WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} COMMAND ${Python_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/build.py ${CGMES_OUTPUT_FOLDER} ${SCHEMA_FOLDER} cpp)
unset(SCHEMA_FOLDER)

