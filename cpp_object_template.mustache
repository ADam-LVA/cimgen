
#include "{{subClassOf}}.hpp"
#include "{{class_name}}.hpp"

{{#attributes}}
#include "{{> class}}.hpp"
{{/attributes}}

{{class_name}}::{{class_name}}() : {{> null_init_list}}
{
};

{{class_name}}::{{class_name}}({{#attributes}}{{> class}} *_{{label}}_, {{/attributes}} char *super_args) {{#super_init}}: {{subClassOf}} (*super_args){{/super_init}}
{
{{#attributes}}
	_{{label}} = _{{label}}_;
{{/attributes}}
};

{{#attributes}}
void {{class_name}}_set{{label}}({{class_name}}* obj, {{> class}}* _{{label}}_){
	obj->_{{label}} = _{{label}}_;
}
{{/attributes}}

{{#attributes}}
bool assign_{{class_name}}_{{label}}(BaseClass* BaseClass_ptr1, BaseClass* BaseClass_ptr2)
{
	if({{class_name}}* element = dynamic_cast<{{class_name}}*>(BaseClass_ptr1))
	{
		element->_{{label}} = dynamic_cast<{{> class}}*>(BaseClass_ptr2);
		if(element->_{{label}} != nullptr)
			return true;
	}
	return false;
}

{{/attributes}}

BaseClass* {{class_name}}_factory()
{
      return new {{class_name}};
}
